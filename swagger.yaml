openapi: 3.0.0
info:
  description: "API template"
  version: "0.0.0"
  title: "API template"
servers:
  - url: 'http://localhost:3000/'


components:
  schemas:
    Vol:
      type: object
      properties:
        volNum:
          type: string
        dateDepart:
          type: datetime
        villeDepart:
          type: string
        villeArrive:
          type: string
        statut:
          type: string
      required:
        - volNum
        - dateDepart
        - villeDepart
        - villeArrive
        - statut

paths:
  /vols:
    get:
      tags:
        - "Vols"
      summary: "Lister tous les vols possibles"
      parameters:
        - in: query
          name: depart
          required: false
          schema:
            type: string
          description: "Aéroport de départ"
        - in: query
          name: destination
          required: false
          schema:
            type: string
          description: "Aéroport d'arrivée"
      responses:
        '200':
          description: "La liste des vols"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: '#/components/schemas/Vol'

        '400':
          description: "Paramètres invalides"
        '404':
          description: "Vol non trouvé avec les filtres"
    post:
      tags:
        - "Vols"
      summary: "Créer un vol"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/Vol'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Vol'
      responses:
        '201':
          description: "Vol créé"
          content:
            application/json:
              schema:
                type: "object"
                $ref: '#/components/schemas/Vol'
        '400':
          description: "Une ou plusieurs données sont invalides"
        '409':
          description: "Duplication de données"
  /vol/{idVol}:
    get:
      tags:
        - "Vols"
      summary: "Consulter un vol spécificique avec son identifiant"
      responses:
        '200':
          description: "Le détail du vol"
          content:
            application/json:
              schema:
                type: "object"
                $ref: '#/components/schemas/Vol'
        '404':
          description: "Vol non trouvé avec l'identifiant fournit"
      parameters:
        - name: idVol
          in: path
          required: true
          description: "Identifiant du vol"
          schema:
            type: integer
            format: int64
            minimum: 1
    put:
      tags:
        - "Vols"
      summary: "Editer un vol."
      parameters:
        - name: idVol
          in: path
          required: true
          description: "Identifiant du vol"
          schema:
            type: integer
            format: int64
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dateDepart:
                  type: datetime
                statut:
                  type: string
      responses:
        '200':
          description: "OK. Le vol existe et les données sont valides"
        '400':
          description: "Une ou plusieurs données sont invalides"
        '404':
          description: "Vol non trouvé avec l'identifiant fournit"
    delete:
      tags:
        - "Vols"
      summary: "Supprimer un vol"
      parameters:
        - name: idVol
          in: path
          required: true
          description: "Identifiant du vol"
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '204':
          description: "Le vol est supprimé"
        '404':
          description: "Vol non trouvé avec l'identifiant fournit"
